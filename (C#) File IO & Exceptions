
public class Columnfull : System.Exception
{
    public Columnfull(string message) : base(message) { }
}

public class ConnectFour
{
    private char[,] _board;
    private string _turn;
    private char _token;

    public ConnectFour()
    {
        _board = new char[6, 7];
        _turn = "Red";
        _token = 'R';
    }

    public void Initialize()
    {
        for (int i = 0; i < 6; i++)
        {
            for (int j = 0; j < 7; j++)
            {
                _board[i, j] = ' ';
            }
        }
    }


    public void SetCurrentTurn()
    {
        _turn = "Red";
        _token = 'R';
    }


    public void NextTurn()
    {
        if (_turn == "Red")
        {
            _turn = "Yellow";
            _token = 'Y';
        }
        else
        {
            _turn = "Red";
            _token = 'R';
        }
    }

    public int NextAvailablePosition(int column)
    {
        int i = 5;
        while (i >= 0 && _board[i, column] != ' ')
        {
            i--;
        }
        return i;
    }


    public void DropPiece(int column, char token)
    {
        int i = NextAvailablePosition(column);
        if (i == -1)
        {
            throw new Columnfull("Column is full");
        }
        _board[i, column] = token;
    }

    public override string ToString()
    {
        String to_return = " 0 1 2 3 4 5 6";
for (int i = 0; i < 6; i++)
        {
            to_return += "\n-----------------------------\n";
            to_return += "| ";
            for (int j = 0; j < 7; j++)
            {
                to_return += _board[i, j] + " | ";
            }
        }
        to_return += "\n-----------------------------\n";
        return to_return;
    }

    public void saveGame()
    {
        try
        {
            Console.WriteLine("Enter a filename:");
            string fileName = Console.ReadLine();

            using (StreamWriter writer = new StreamWriter(fileName))
            {
                for (int i = 0; i < 8; i++)
                {
                    for (int j = 0; j < 8; j++)
                    {
                        writer.Write(_board[i, j]);
                    }
                    writer.WriteLine();
                }
            }

            Console.WriteLine("Game saved successfully.");
        }
        catch (Exception ex)
        {
            Console.WriteLine("An error occurred: " + ex.Message);
        }
    }

    public void loadGame()
    {
        try
        {
            Console.WriteLine("Enter a filename:");
            string fileName = Console.ReadLine();

            using (StreamReader reader = new StreamReader(fileName))
            {
                for (int i = 0; i < 8; i++)
                {
                    string line = reader.ReadLine();
                    if (line.Length != 8)
                    {
                        throw new FormatException("Invalid file format.");
                    }

                    for (int j = 0; j < 8; j++)
                    {
                        _board[i, j] = line[j];
                    }
                }
            }

            Console.WriteLine("Game loaded successfully.");
        }
        catch (FileNotFoundException)
        {
            Console.WriteLine("File not found.");
        }
        catch (FormatException)
        {
            Console.WriteLine("Invalid file format.");
        }
        catch (Exception ex)
        {
            Console.WriteLine("An error occurred: " + ex.Message);
        }
    }



}





internal class Assignment6
{
    private static void Main(string[] args)
    {



        ConnectFour game = new ConnectFour();

        int userInput = 0;
        while (userInput != 9)
        {
            Console.WriteLine("Which column would Red like to go in (0-6), 7 to save, 8 to load, 9 to quit:");
            if (!int.TryParse(Console.ReadLine(), out userInput))
            {
                Console.WriteLine("Invalid input. Please enter a number between 0-9.");
                continue;
            }

            try
            {

                if (userInput >= 0 && userInput <= 6)
                {
                    game.DropPiece(userInput, 'R');
                    game.NextTurn();
                }
                else if (userInput == 7)
                {
                    game.saveGame();
                }
                else if (userInput == 8)
                {
                    game.loadGame();
                }
                else if (userInput == 9)
                {
                    Console.WriteLine("Exiting the game.");
                    break;
                }
                else
                {
                    Console.WriteLine("Invalid input. Please enter a number between 0-9.");
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine("An error occurred: " + ex.Message);
                if (ex.Message.Contains("full"))
                {
                    Console.WriteLine("The column is full. Please try again.");
                }
            }
        }
    }
}
